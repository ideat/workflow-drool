<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindware.workflow.persistence.users.MapperUsers">
    <resultMap id="UserMap" type="com.mindware.workflow.core.entity.Users">
        <id property="id" column="id" typeHandler="com.mindware.workflow.persistence.typehandler.UUIDTypeHandler"/>
        <result property="login" column="login"/>
        <result property="email" column="email"/>
        <result property="codeOffice" column="code_office"/>
        <result property="password" column="password"/>
        <result property="dateUpdatePassword" column="date_update_password"/>
        <result property="names" column="names"/>
        <result property="lastNames" column="last_names"/>
        <result property="numDaysValidity" column="num_days_validity"/>
        <result property="state" column="state"/>
        <result property="rol" column="rol"/>
        <result property="dateCreation" column="date_creation"/>
        <result property="position" column="position"/>
        <result property="supervisor" column="supervisor"/>
        <result property="scope" column="scope"/>
    </resultMap>

    <insert id="addUser" parameterType="com.mindware.workflow.core.entity.Users">
        insert into public.users(
            id,
            login,
            email,
            names,
            last_names,
            num_days_validity,
            state,
            code_office,
            rol,
            date_creation,
            password,
            position,
            supervisor,
            scope)
        values (
                   #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler},
                   #{login},
                   #{email},
                   #{names},
                   #{lastNames},
                   #{numDaysValidity},
                   #{state},
                   #{codeOffice},
                   #{rol},
                   #{dateCreation},
                   #{password},
                   #{position},
                   #{supervisor},
                   #{scope}
               )
    </insert>

    <update id="updateUser" parameterType="com.mindware.workflow.core.entity.Users">
        update public.users
        set
            names = #{names},
            last_names = #{lastNames},
            email = #{email},
            state = #{state},
            code_office = #{codeOffice},
            num_days_validity = #{numDaysValidity},
            rol = #{rol},
            position = #{position},
            supervisor = #{supervisor},
            scope = #{scope}
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}

    </update>

    <update id="updatePassword" parameterType="com.mindware.workflow.core.entity.Users">
        update public.users
        set
            password = #{password},
            date_update_password = #{dateUpdatePassword},
            state = #{state}
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}

    </update>


    <select id="getAllUsers" resultMap="UserMap">
        <![CDATA[
        select *
        from public.users
        ]]>
    </select>

    <select id="getUserById" resultMap="UserMap" parameterType="map">
        <![CDATA[
        select *
        from public.users
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}
        ]]>
    </select>

    <select id="getUserByIdUser" resultMap="UserMap" parameterType="map">
        <![CDATA[
        select *
        from public.users
        where login = #{login}
        ]]>
    </select>

    <select id="getUserByEmail" resultMap="UserMap" parameterType="map">
        <![CDATA[
        select *
        from public.users
        where email = #{email}
        ]]>
    </select>

    <select id="getByRol" resultMap="UserMap" parameterType="map">
        <![CDATA[
        select *
        from public.users
        where rol = #{rol}
        ]]>
    </select>

    <select id="getByCodeOffice" resultMap="UserMap" parameterType="map">
        <![CDATA[
        select *
        from public.users
        where code_office = #{codeOffice}
        ]]>
    </select>


</mapper>