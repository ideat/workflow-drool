<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindware.workflow.persistence.contract.MapperContract">
    <resultMap id="ContractMap" type="com.mindware.workflow.core.entity.contract.Contract">
        <id property="id" column="id" typeHandler="com.mindware.workflow.persistence.typehandler.UUIDTypeHandler"/>
        <result property="numberRequest" column="number_request"/>
        <result property="dateContract" column="date_contract"/>
        <result property="denominationDebtor" column="denomination_debtor"/>
        <result property="denominationGuarantor" column="denomination_guarantor"/>
        <result property="denominationCreditor" column="denomination_creditor"/>
        <result property="fileName" column="file_name"/>
        <result property="description" column="description"/>
        <result property="pathContract" column="path_contract"/>
        <result property="pathTemplate" column="path_template"/>
    </resultMap>

    <insert id="add" parameterType="com.mindware.workflow.core.entity.contract.Contract">
        insert into workflow.contract(
            id,
            number_request,
            date_contract,
            denomination_debtor,
            denomination_guarantor,
            denomination_creditor,
            file_name,
            description,
            path_contract,
            path_template)
        values (
                   #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler},
                   #{numberRequest},
                   #{dateContract},
                   #{denominationDebtor},
                   #{denominationGuarantor},
                   #{denominationCreditor},
                   #{fileName},
                   #{description},
                   #{pathContract},
                   #{pathTemplate}
               )
    </insert>

    <update id="update" parameterType="com.mindware.workflow.core.entity.contract.Contract">
        update workflow.contract
        set
            date_contract = #{dateContract},
            denomination_debtor = #{denominationDebtor},
            denomination_guarantor = #{denominationGuarantor},
            denomination_creditor = #{denominationCreditor},
            file_name = #{fileName},
            description = #{description},
            path_contract = #{pathContract},
            path_template = #{pathTemplate}
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}

    </update>

    <select id="getById" resultMap="ContractMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.contract
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}
        ]]>
    </select>

    <delete id="delete" parameterType="map">
        delete from workflow.contract
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}
    </delete>

    <select id="getByNumberRequest" resultMap="ContractMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.contract
        where number_request = #{numberRequest}
        ]]>
    </select>

</mapper>