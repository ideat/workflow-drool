<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindware.workflow.persistence.exceptions.MapperExceptionsCreditRequest">
    <resultMap id="ExceptionsCreditRequestMap" type="com.mindware.workflow.core.entity.exceptions.ExceptionsCreditRequest">
        <id property="id" column="id" typeHandler="com.mindware.workflow.persistence.typehandler.UUIDTypeHandler"/>
        <result property="codeException" column="code_exception" />
        <result property="numberRequest" column="number_request"/>
        <result property="state" column="state"/>
        <result property="register" column="register"/>
        <result property="justification" column="justification"/>
        <result property="statusReview" column="status_review"/>
        <result property="riskType" column="risk_type"/>
    </resultMap>

    <insert id="add" parameterType="com.mindware.workflow.core.entity.exceptions.ExceptionsCreditRequest">
        insert into workflow.exceptions_creditrequest(
            id,
            code_exception,
            number_request,
            state,
            register,
            justification,
            status_review,
            risk_type)
        values (
                   #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler},
                   #{codeException},
                   #{numberRequest},
                   #{state},
                   #{register},
                   #{justification},
                   #{statusReview}::json,
                   #{riskType}
               )
    </insert>

    <update id="update" parameterType="com.mindware.workflow.core.entity.exceptions.ExceptionsCreditRequest">
        update workflow.exceptions_creditrequest
        set
            code_exception = #{codeException},
            state = #{state},
            justification = #{justification},
            status_review = #{statusReview}::json,
            risk_type = #{riskType}
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}

    </update>

    <update id="updateUser" parameterType="com.mindware.workflow.core.entity.exceptions.ExceptionsCreditRequest">
        update workflow.exceptions_creditrequest
        set
            status_review = #{statusReview}::json
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}

    </update>

    <select id="getByNumberRequest" resultMap="ExceptionsCreditRequestMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.exceptions_creditrequest
        where number_request = #{numberRequest}
        ]]>
    </select>

    <select id="getAll" resultMap="ExceptionsCreditRequestMap">
        <![CDATA[
        select *
        from workflow.exceptions_creditrequest
        ]]>
    </select>

    <select id="getById" resultMap="ExceptionsCreditRequestMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.exceptions_creditrequest
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}
        ]]>
    </select>

    <select id="getByCodeExceptionNumberRequest" resultMap="ExceptionsCreditRequestMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.exceptions_creditrequest
        where code_exception = #{codeException}
        and number_request = #{numberRequest}
        ]]>
    </select>

    <delete id="delete" parameterType="map">
        delete
        from workflow.exceptions_creditrequest
        where id = #{id}
    </delete>

</mapper>