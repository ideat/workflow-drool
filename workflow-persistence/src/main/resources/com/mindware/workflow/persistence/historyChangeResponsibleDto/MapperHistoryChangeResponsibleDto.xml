<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindware.workflow.persistence.historyChangeResponsibleDto.MapperHistoryChangeResponsibleDto">
    <resultMap id="HistoryChangeResponsibleDtoMap" type="com.mindware.workflow.core.service.data.historyChangeResponsible.dto.HistoryChangeResponsibleDto">
        <result property="numberRequest" column="number_request"/>
        <result property="numberApplicant" column="number_applicant"/>
        <result property="firstName" column="first_name"/>
        <result property="secondName" column="second_name"/>
        <result property="lastName" column="last_name"/>
        <result property="motherLastName" column="mother_last_name"/>
        <result property="marriedLastName" column="married_last_name"/>
        <result property="amount" column="amount"/>
        <result property="currency" column="currency"/>
        <result property="city" column="city"/>
        <result property="nameOffice" column="name_office"/>
        <result property="nameUser" column="name_user"/>
    </resultMap>


    <select id="getDataByRolOficial" resultMap="HistoryChangeResponsibleDtoMap">
        SELECT c.number_request, a.first_name, a.second_name, a.last_name, a.mother_last_name,
               a.married_last_name, c.currency, c.amount, o.city, o.name as name_office, u.names as name_user
        from workflow.creditrequest c
                 inner join workflow.creditrequest_applicant ca on (c.number_request = ca.number_request and ca.type_relation = 'deudor')
                 inner join workflow.applicant a on (ca.number_applicant = a.number_applicant)
                 inner join public.office o on (c.id_office = o.internal_code)
                 inner join public.users u on (u.login = c.login_user)
        where c.login_user = #{loginUser}
        order by c.number_request
    </select>

    <select id="getDataByRolLegal" resultMap="HistoryChangeResponsibleDtoMap">
        SELECT c.number_request, a.first_name, a.second_name, a.last_name, a.mother_last_name,
               a.married_last_name, c.currency, c.amount, o.city, o.name as name_office, u.names as name_user
        from workflow.creditrequest c
                 inner join workflow.creditrequest_applicant ca on (c.number_request = ca.number_request and ca.type_relation = 'deudor')
                 inner join workflow.applicant a on (ca.number_applicant = a.number_applicant)
                 inner join public.office o on (c.id_office = o.internal_code)
                 inner join workflow.legal_information li on (li.number_request = c.number_request )
                 inner join public.users u on (u.login = li.created_by)
        where li.created_by = #{loginUser}
        order by c.number_request
    </select>

    <select id="getDataByRolAuthorizer" resultMap="HistoryChangeResponsibleDtoMap">
        <![CDATA[
        SELECT c.number_request, a.first_name, a.second_name, a.last_name, a.mother_last_name,
               a.married_last_name, c.currency, c.amount, o.city, o.name as name_office, u.names as name_user
        from workflow.creditrequest c
                 inner join workflow.creditrequest_applicant ca on (c.number_request = ca.number_request and ca.type_relation = 'deudor')
                 inner join workflow.applicant a on (ca.number_applicant = a.number_applicant)
                 inner join public.office o on (c.id_office = o.internal_code)
                 inner join public.users u on (u.login = #{loginUser})
        where c.number_request in (
            SELECT ec.number_request
            from workflow.exceptions_creditrequest ec, json_array_elements( ec.status_review::json ) s
            where s ->> 'loginUser'= #{loginUser})
        order by c.number_request
        ]]>
    </select>

    <select id="getDataUserWorkflow" resultMap="HistoryChangeResponsibleDtoMap">
        <![CDATA[
        SELECT c.number_request, a.first_name, a.second_name, a.last_name, a.mother_last_name,
               a.married_last_name, c.currency, c.amount, o.city, o.name as name_office, u.names as name_user
        from workflow.creditrequest c
                 inner join workflow.creditrequest_applicant ca on (c.number_request = ca.number_request and ca.type_relation = 'deudor')
                 inner join workflow.applicant a on (ca.number_applicant = a.number_applicant)
                 inner join public.office o on (c.id_office = o.internal_code)
                 inner join public.users u on (u.login = #{loginUser})
        where c.number_request in (
            SELECT distinct sh.number_request
            from workflow.stage_history sh
            where sh.user_task = #{loginUser}
        )
        order by c.number_request
        ]]>
    </select>

</mapper>