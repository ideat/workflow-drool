<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindware.workflow.persistence.exceptions.MapperAuthorizer">
    <resultMap id="AuthorizerMap" type="com.mindware.workflow.core.entity.exceptions.Authorizer">
        <id property="id" column="id" typeHandler="com.mindware.workflow.persistence.typehandler.UUIDTypeHandler"/>
        <result property="loginUser" column="login_user"/>
        <result property="maximumAmountBs" column="maximum_amount_bs"/>
        <result property="minimumAmountBs" column="minimum_amount_bs"/>
        <result property="maximumAmountSus" column="maximum_amount_sus"/>
        <result property="minimumAmountSus" column="minimum_amount_sus"/>
        <result property="scope" column="scope"/>
        <result property="state" column="state"/>
        <result property="riskType" column="risk_type"/>
    </resultMap>

    <insert id="add" parameterType="com.mindware.workflow.core.entity.exceptions.Authorizer">
        insert into workflow.authorizer(
            id,
            login_user,
            maximum_amount_bs,
            minimum_amount_bs,
            maximum_amount_sus,
            minimum_amount_sus,
            scope,
            state,
            risk_type)
        values (
                   #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler},
                   #{loginUser},
                   #{maximumAmountBs},
                   #{minimumAmountBs},
                   #{maximumAmountSus},
                   #{minimumAmountSus},
                   #{scope},
                   #{state},
                   #{riskType}
               )
    </insert>

    <update id="update" parameterType="com.mindware.workflow.core.entity.exceptions.Authorizer">
        update workflow.authorizer
        set
            login_user = #{loginUser},
            maximum_amount_bs = #{maximumAmountBs},
            minimum_amount_bs = #{minimumAmountBs},
            maximum_amount_sus = #{maximumAmountSus},
            minimum_amount_sus = #{minimumAmountSus},
            scope = #{scope},
            state = #{state},
            risk_type = #{riskType}
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}

    </update>


    <select id="getByLoginUsers" resultMap="AuthorizerMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.authorizer
        where login_user = #{loginUser}
        ]]>
    </select>

    <select id="getAll" resultMap="AuthorizerMap">
        <![CDATA[
        select *
        from workflow.authorizer
        ]]>
    </select>

    <select id="getById" resultMap="AuthorizerMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.authorizer
        where id = #{id, typeHandler=com.mindware.workflow.persistence.typehandler.UUIDTypeHandler}
        ]]>
    </select>

    <select id="getByScope" resultMap="AuthorizerMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.authorizer
        where scope = #{scope}
        ]]>
    </select>

    <select id="getByRiskType" resultMap="AuthorizerMap" parameterType="map">
        <![CDATA[
        select *
        from workflow.authorizer
        where risk_type like '%'|| #{riskType}||'%'
        ]]>
    </select>

    <delete id="delete" parameterType="map">
        delete
        from workflow.authorizer
        where id = #{id}
    </delete>

</mapper>