<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mindware.workflow.persistence.exceptions.MapperExceptionsCreditRequestDto">
    <resultMap id="ExceptionsMap" type="com.mindware.workflow.core.service.data.exceptions.dto.ExceptionsCreditRequestDto">
        <id property="idExceptions" column="id_exceptions" typeHandler="com.mindware.workflow.persistence.typehandler.UUIDTypeHandler"/>
        <result property="numberRequest" column="number_request"/>
        <result property="exceptionDetail" column="exception_detail"/>
        <result property="internalCode" column="internal_code"/>
        <result property="typeException" column="type_exception"/>
        <result property="stateException" column="state_exception"/>
        <result property="limitTime" column="limit_time"/>
        <result property="register" column="register"/>
        <result property="riskType" column="risk_type"/>
    </resultMap>


    <select id="getByNumberRequest" resultMap="ExceptionsMap" parameterType="map">
        <![CDATA[
        select ec.id as id_exceptions, ec.number_request, e.description as exception_detail
        , e.internal_code, ec.state as state_exception, e.limit_time, ec.register, e.type_exception
        , e.risk_type
        from workflow.exceptions_creditrequest ec
        inner join workflow.creditrequest cr on (ec.number_request = cr.number_request)
        inner join workflow.exceptions e on (e.internal_code = ec.code_exception)
        where ec.number_request = #{numberRequest}
        ]]>
    </select>


    <select id="getByCodeExceptionNumberRequest" resultMap="ExceptionsMap" parameterType="map">
        <![CDATA[
        select ec.id as id_exceptions, ec.number_request, e.description as exception_detail
             , e.internal_code, ec.state as state_exception, e.limit_time, ec.register, e.type_exception
             , e.risk_type
        from workflow.exceptions_creditrequest ec
                 inner join workflow.creditrequest cr on (ec.number_request = cr.number_request)
                 inner join workflow.exceptions e on (e.internal_code = ec.code_exception)
        where ec.number_request = #{numberRequest}
        and e.internal_code = #{codeException}
        ]]>
    </select>

    <select id="getAll" resultMap="ExceptionsMap">
        <![CDATA[
         select  ec.id as id_exceptions, ec.number_request, e.description as exception_detail
         , e.internal_code, ec.state as state_exception, e.limit_time, ec.register, e.type_exception
         , e.risk_type
         from workflow.exceptions_creditrequest ec
         inner join workflow.creditrequest cr on (ec.number_request = cr.number_request)
         inner join workflow.exceptions e on (e.internal_code = ec.code_exception)
        ]]>
    </select>


</mapper>